# -*- coding: utf-8 -*-
"""Pandemic_Simulation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PxgekloCMYuZZ4geH5B5KIMTvy6zmK60
"""

import random
import time
from scipy.stats import norm

peopleDictionary = []

class Person():
  def __init__(self,startingImmunity):
    if random.randint(0,100)<startingImmunity:
      self.immunity = True
    else:
      self.immunity = False
    self.contagiousness = 0
    self.mask = 0
    self.contagiousDays = 0

    self.friends = int((norm.rvs(size=1,loc =0.5,scale=0.15)[0]*10).round(0))

  def wearMask(self):
    self.contagiousness/=2

'''
num = int((norm.rvs(size=1,loc =0.5,scale=0.15)[0]*10).round(0))
n = norm.rvs(size=1,loc =0.5,scale=0.15)[0]
print(n)
print(n*10)
num = int((n*10).round(0))
print(num)
'''

def initiateSim():
  numPeople = int(input("population: "))
  startingImmunity = int(input("percentage of people with natural immunity"))
  startingInfecters = int(input("number of people infectious at t=0:"))

  for x in range(0,numPeople):
    peopleDictionary.append(Person(startingImmunity))
  for x in range(0,startingInfecters):
    peopleDictionary[random.randint(0,len(peopleDictionary)-1)].contagiousness = int((norm.rvs(size=1,loc=0.5,scale=0.15)[0]*10).round(0)*10)
  daysContagious = int(input("How many days contagious: "))
  lockdownDay = int(input("Day for lockdown to be enforced: "))
  maskDay = int(input("Day for masks to be used:"))
  #maskedPeople = int(input("Enter the percentage of people that choose to wear a mask that particular day"))
  #print(peopleDictionary)

  return daysContagious, lockdownDay, maskDay #, maskedPeople

def runDay(daysContagious, lockdown):
  for person in [person for person in peopleDictionary if person.contagiousness>0 and person.friends>0]:
    peopleCouldMeetToday = int(person.friends/2)
    if peopleCouldMeetToday > 0:
      peopleMetToday = random.randint(0,peopleCouldMeetToday)
    else:
      peopleMetToday = 0
    
    if lockdown == True:
      peopleMetToday =0
      
    for x in range(0,peopleMetToday):
      friendInQuestion = peopleDictionary[random.randint(0,len(peopleDictionary)-1)]
      if random.randint(0,100)<person.contagiousness and friendInQuestion.contagiousness == 0 and friendInQuestion.immunity == False:
        friendInQuestion.contagiousness = int((norm.rvs(size=1,loc=0.5,scale=0.15)[0]*10).round(0)*10)
        print(peopleDictionary.index(person), " >>> ", peopleDictionary.index(friendInQuestion))

  for person in [person for person in peopleDictionary if person.contagiousness>0]:
    person.contagiousDays +=1
    if person.contagiousDays>daysContagious:
      person.immunity =True
      person.contagiousness = 0
      print("||| ",peopleDictionary.index(person), " |||")

lockdown = False
daysContagious,lockdownDay,maskDay = initiateSim()
#saveFile = open("pandemicSim.txt","a")

n = len(peopleDictionary)
## Educated Population > 60% wear a mask, say daily
maskedPeople = int(0.6*n)

data =[]
for x in range(0,100):
  l = []
  if x == lockdownDay:
    lockdown = True
  '''
  if x == maskDay:
    for person in peopleDictionary:
      person.wearMask()
  ''' 
  for i in range(0,maskedPeople):
    peopleDictionary[random.randint(0,len(peopleDictionary)-1)].wearMask()

  print("DAY ", x)
  l.append(x)
  runDay(daysContagious, lockdown)
  #write = str(len([person for person in peopleDictionary if person.contagiousness>0])) + "\n"
  #saveFile.write(write)
  print(len([person for person in peopleDictionary if person.contagiousness>0]), " people are contagious on this Day.")
  l.append(len([person for person in peopleDictionary if person.contagiousness>0]))
  data.append(l)

#saveFile.close()

import pandas as pd
df = pd.DataFrame(data,columns=['days','totalInfected'])

import matplotlib.pyplot as plt
x = df['days'].tolist()
y = df['totalInfected'].tolist()

plt.plot(x,y)
plt.xlabel('Days')
plt.ylabel('Number of Infected')
plt.title('Pandemic Simulation')

plt.show()